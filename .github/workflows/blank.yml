name: Finalize migration

on:
  issue_comment:
    types: [created]
  
permissions:
  issues: write
  contents: read

jobs:
  archive-repositories:
    name: Finalize migration
    runs-on: test

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Parse issue body
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3

      - run: echo $JSON_STRING
        env:
          JSON_STRING: ${{ steps.parse-issue-body.outputs.jsonString }}

      - name: Archive source repositories
        id: archive-repos
        if: cancelled()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_ADMIN_TOKEN }}
          # base-url: https://${{ vars.SOURCE_HOST }}/api/v3
          script: |
            const repoName = 'node16-test';
            const orgName = 'joshjohanning-org';
            core.info(`Archiving ${orgName}/${repoName}`);
            try {
              await github.rest.repos.update({
                owner: orgName,
                repo: repoName,
                archived: true
              });
            } catch (error) {
              core.error(`Failed to archive ${orgName}/${repoName}: ${error.message}`);
              isfailed = true;
            }

      - name: Add issue comment
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            let body = `**:lock: The source repo(s) have been locked and the migration finished**. If you made a mistake and want to unlock the source repo(s), run:
  
            \`\`\`
            /unlock-repos
            \`\`\`
            `
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

      - name: Add finished label
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ["finished"],
            })
            
      - name: Close issue
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: "closed"
            })

      - name: Add issue failure comment
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            let body = `**:x: There was an error locking the repo(s).** [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
